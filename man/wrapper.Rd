% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/bnclassify-doc.R, R/learn-struct.R
\name{wrapper}
\alias{bsej}
\alias{fssj}
\alias{tanhc}
\alias{tanhc_sp}
\alias{wrapper}
\title{Learns Bayesian network classifiers in a wrapper fashion.}
\usage{
fssj(class, dataset, k, epsilon = 0.01, smooth = 0.01)

bsej(class, dataset, k, epsilon = 0.01, smooth = 0.01)

tanhc(class, dataset, k, epsilon = 0.01, smooth = 0.01)

tanhc_sp(class, dataset, k, epsilon = 0.01, smooth = 0.01)
}
\arguments{
\item{class}{A character. Name of the class variable.}

\item{dataset}{The data frame from which to learn the classifier.}

\item{epsilon}{A numeric. Minimum absolute improvement required to keep
searching.}

\item{smooth}{A nonnegative numeric. The smoothing value for Bayesian
parameter estimation.}
}
\description{
bsej is the backward \emph{sequential elimination and joining} algorithm
whereas fssj is the \emph{forward sequential selection and joining}
algorithms for learning a semi-naive Bayes classifier (Pazzani, 1996). tanhc
Learns a tree augmented naive Bayes with a greedy hill-climbing search. tanhc
is the super-parent variant of tanhc.
}
\references{
Pazzani M (1996). Constructive induction of Cartesian product
  attributes. In \emph{Proceedings of the Information, Statistics and
  Induction in Science Conference (ISIS-1996)}, pp. 66-77

  Koegh E and Pazzani M (2002).Learning the structure of augmented Bayesian
  classifiers. In \emph{International Journal on Artificial Intelligence
  Tools}, \bold{11}(4), pp. 587-601.
}

